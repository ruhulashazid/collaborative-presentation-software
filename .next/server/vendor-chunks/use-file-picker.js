"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/use-file-picker";
exports.ids = ["vendor-chunks/use-file-picker"];
exports.modules = {

/***/ "(ssr)/./node_modules/use-file-picker/dist/_rollupPluginBabelHelpers-4e04b055.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/use-file-picker/dist/_rollupPluginBabelHelpers-4e04b055.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _: () => (/* binding */ _asyncToGenerator),\n/* harmony export */   a: () => (/* binding */ _regeneratorRuntime),\n/* harmony export */   b: () => (/* binding */ _extends),\n/* harmony export */   c: () => (/* binding */ _objectDestructuringEmpty),\n/* harmony export */   d: () => (/* binding */ _inheritsLoose)\n/* harmony export */ });\nfunction _regeneratorRuntime() {\n  _regeneratorRuntime = function () {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function (obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function (method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function (skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function () {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function (exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function (type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function (record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function (finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    catch: function (tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function (iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}\n\n\n//# sourceMappingURL=_rollupPluginBabelHelpers-4e04b055.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/use-file-picker/dist/_rollupPluginBabelHelpers-4e04b055.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/use-file-picker/dist/index.esm.js":
/*!********************************************************!*\
  !*** ./node_modules/use-file-picker/dist/index.esm.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useFilePicker: () => (/* binding */ useFilePicker),\n/* harmony export */   useImperativeFilePicker: () => (/* binding */ useImperativeFilePicker)\n/* harmony export */ });\n/* harmony import */ var _rollupPluginBabelHelpers_4e04b055_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_rollupPluginBabelHelpers-4e04b055.js */ \"(ssr)/./node_modules/use-file-picker/dist/_rollupPluginBabelHelpers-4e04b055.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var file_selector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! file-selector */ \"(ssr)/./node_modules/use-file-picker/node_modules/file-selector/dist/es5/index.js\");\n\n\n\n\nfunction openFileDialog(accept, multiple, callback, initializeWithCustomAttributes) {\n  // this function must be called from a user\n  // activation event (ie an onclick event)\n  // Create an input element\n  var inputElement = document.createElement('input');\n  // Hide element and append to body (required to run on iOS safari)\n  inputElement.style.display = 'none';\n  document.body.appendChild(inputElement);\n  // Set its type to file\n  inputElement.type = 'file';\n  // Set accept to the file types you want the user to select.\n  // Include both the file extension and the mime type\n  // if accept is \"*\" then dont set the accept attribute\n  if (accept !== '*') inputElement.accept = accept;\n  // Accept multiple files\n  inputElement.multiple = multiple;\n  // set onchange event to call callback when user has selected file\n  //inputElement.addEventListener('change', callback);\n  inputElement.addEventListener('change', function (arg) {\n    callback(arg);\n    // remove element\n    document.body.removeChild(inputElement);\n  });\n  if (initializeWithCustomAttributes) {\n    initializeWithCustomAttributes(inputElement);\n  }\n  // dispatch a click event to open the file dialog\n  inputElement.dispatchEvent(new MouseEvent('click'));\n}\n\nvar useValidators = function useValidators(_ref) {\n  var onFilesSelectedProp = _ref.onFilesSelected,\n    onFilesSuccessfullySelectedProp = _ref.onFilesSuccessfullySelected,\n    onFilesRejectedProp = _ref.onFilesRejected,\n    onClearProp = _ref.onClear,\n    validators = _ref.validators;\n  // setup validators' event handlers\n  var onFilesSelected = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function (data) {\n    onFilesSelectedProp == null ? void 0 : onFilesSelectedProp(data);\n    validators == null ? void 0 : validators.forEach(function (validator) {\n      validator.onFilesSelected(data);\n    });\n  }, [onFilesSelectedProp, validators]);\n  var onFilesSuccessfullySelected = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function (data) {\n    onFilesSuccessfullySelectedProp == null ? void 0 : onFilesSuccessfullySelectedProp(data);\n    validators == null ? void 0 : validators.forEach(function (validator) {\n      validator.onFilesSuccessfullySelected(data);\n    });\n  }, [validators, onFilesSuccessfullySelectedProp]);\n  var onFilesRejected = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function (errors) {\n    onFilesRejectedProp == null ? void 0 : onFilesRejectedProp(errors);\n    validators == null ? void 0 : validators.forEach(function (validator) {\n      validator.onFilesRejected(errors);\n    });\n  }, [validators, onFilesRejectedProp]);\n  var onClear = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function () {\n    onClearProp == null ? void 0 : onClearProp();\n    validators == null ? void 0 : validators.forEach(function (validator) {\n      validator.onClear == null ? void 0 : validator.onClear();\n    });\n  }, [validators, onClearProp]);\n  return {\n    onFilesSelected: onFilesSelected,\n    onFilesSuccessfullySelected: onFilesSuccessfullySelected,\n    onFilesRejected: onFilesRejected,\n    onClear: onClear\n  };\n};\n\n// empty array reference in order to avoid re-renders when no validators are passed as props\nvar EMPTY_ARRAY = [];\nfunction useFilePicker(props) {\n  var _props$accept = props.accept,\n    accept = _props$accept === void 0 ? '*' : _props$accept,\n    _props$multiple = props.multiple,\n    multiple = _props$multiple === void 0 ? true : _props$multiple,\n    _props$readAs = props.readAs,\n    readAs = _props$readAs === void 0 ? 'Text' : _props$readAs,\n    _props$readFilesConte = props.readFilesContent,\n    readFilesContent = _props$readFilesConte === void 0 ? true : _props$readFilesConte,\n    _props$validators = props.validators,\n    validators = _props$validators === void 0 ? EMPTY_ARRAY : _props$validators,\n    initializeWithCustomParameters = props.initializeWithCustomParameters;\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]),\n    plainFiles = _useState[0],\n    setPlainFiles = _useState[1];\n  var _useState2 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]),\n    filesContent = _useState2[0],\n    setFilesContent = _useState2[1];\n  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]),\n    fileErrors = _useState3[0],\n    setFileErrors = _useState3[1];\n  var _useState4 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useValidators = useValidators(props),\n    onFilesSelected = _useValidators.onFilesSelected,\n    onFilesSuccessfullySelected = _useValidators.onFilesSuccessfullySelected,\n    onFilesRejected = _useValidators.onFilesRejected,\n    onClear = _useValidators.onClear;\n  var clear = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function () {\n    setPlainFiles([]);\n    setFilesContent([]);\n    setFileErrors([]);\n  }, []);\n  var clearWithEventListener = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function () {\n    clear();\n    onClear == null ? void 0 : onClear();\n  }, [clear, onClear]);\n  var parseFile = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function (file) {\n    return new Promise( /*#__PURE__*/function () {\n      var _ref = (0,_rollupPluginBabelHelpers_4e04b055_js__WEBPACK_IMPORTED_MODULE_0__._)( /*#__PURE__*/(0,_rollupPluginBabelHelpers_4e04b055_js__WEBPACK_IMPORTED_MODULE_0__.a)().mark(function _callee2(resolve, reject) {\n        var reader, readStrategy, addError;\n        return (0,_rollupPluginBabelHelpers_4e04b055_js__WEBPACK_IMPORTED_MODULE_0__.a)().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              reader = new FileReader(); //availible reader methods: readAsText, readAsBinaryString, readAsArrayBuffer, readAsDataURL\n              readStrategy = reader[\"readAs\" + readAs];\n              readStrategy.call(reader, file);\n              addError = function addError(_ref2) {\n                var others = (0,_rollupPluginBabelHelpers_4e04b055_js__WEBPACK_IMPORTED_MODULE_0__.b)({}, ((0,_rollupPluginBabelHelpers_4e04b055_js__WEBPACK_IMPORTED_MODULE_0__.c)(_ref2), _ref2));\n                reject((0,_rollupPluginBabelHelpers_4e04b055_js__WEBPACK_IMPORTED_MODULE_0__.b)({}, others));\n              };\n              reader.onload = /*#__PURE__*/(0,_rollupPluginBabelHelpers_4e04b055_js__WEBPACK_IMPORTED_MODULE_0__._)( /*#__PURE__*/(0,_rollupPluginBabelHelpers_4e04b055_js__WEBPACK_IMPORTED_MODULE_0__.a)().mark(function _callee() {\n                return (0,_rollupPluginBabelHelpers_4e04b055_js__WEBPACK_IMPORTED_MODULE_0__.a)().wrap(function _callee$(_context) {\n                  while (1) switch (_context.prev = _context.next) {\n                    case 0:\n                      return _context.abrupt(\"return\", Promise.all(validators.map(function (validator) {\n                        return validator.validateAfterParsing(props, file, reader)[\"catch\"](function (err) {\n                          return Promise.reject(addError(err));\n                        });\n                      })).then(function () {\n                        return resolve((0,_rollupPluginBabelHelpers_4e04b055_js__WEBPACK_IMPORTED_MODULE_0__.b)({}, file, {\n                          content: reader.result,\n                          name: file.name,\n                          lastModified: file.lastModified\n                        }));\n                      })[\"catch\"](function () {}));\n                    case 1:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }, _callee);\n              }));\n              reader.onerror = function () {\n                addError({\n                  name: 'FileReaderError',\n                  readerError: reader.error,\n                  causedByFile: file\n                });\n              };\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }, [props, readAs, validators]);\n  var openFilePicker = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function () {\n    var fileExtensions = accept instanceof Array ? accept.join(',') : accept;\n    openFileDialog(fileExtensions, multiple, /*#__PURE__*/function () {\n      var _ref4 = (0,_rollupPluginBabelHelpers_4e04b055_js__WEBPACK_IMPORTED_MODULE_0__._)( /*#__PURE__*/(0,_rollupPluginBabelHelpers_4e04b055_js__WEBPACK_IMPORTED_MODULE_0__.a)().mark(function _callee3(evt) {\n        var inputElement, plainFileObjects, validationsBeforeParsing, files, validationsAfterParsing, filesContent;\n        return (0,_rollupPluginBabelHelpers_4e04b055_js__WEBPACK_IMPORTED_MODULE_0__.a)().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              clear();\n              inputElement = evt.target;\n              plainFileObjects = inputElement.files ? Array.from(inputElement.files) : [];\n              setLoading(true);\n              _context3.next = 6;\n              return Promise.all(validators.map(function (validator) {\n                return validator.validateBeforeParsing(props, plainFileObjects)[\"catch\"](function (err) {\n                  return Array.isArray(err) ? err : [err];\n                });\n              }));\n            case 6:\n              validationsBeforeParsing = _context3.sent.flat(1).filter(Boolean);\n              setPlainFiles(plainFileObjects);\n              setFileErrors(validationsBeforeParsing);\n              if (!validationsBeforeParsing.length) {\n                _context3.next = 15;\n                break;\n              }\n              setLoading(false);\n              setPlainFiles([]);\n              onFilesRejected == null ? void 0 : onFilesRejected({\n                errors: validationsBeforeParsing\n              });\n              onFilesSelected == null ? void 0 : onFilesSelected({\n                errors: validationsBeforeParsing\n              });\n              return _context3.abrupt(\"return\");\n            case 15:\n              if (readFilesContent) {\n                _context3.next = 19;\n                break;\n              }\n              setLoading(false);\n              onFilesSelected == null ? void 0 : onFilesSelected({\n                plainFiles: plainFileObjects,\n                filesContent: []\n              });\n              return _context3.abrupt(\"return\");\n            case 19:\n              _context3.next = 21;\n              return (0,file_selector__WEBPACK_IMPORTED_MODULE_2__.fromEvent)(evt);\n            case 21:\n              files = _context3.sent;\n              validationsAfterParsing = [];\n              _context3.next = 25;\n              return Promise.all(files.map(function (file) {\n                return parseFile(file)[\"catch\"](function (fileError) {\n                  validationsAfterParsing.push.apply(validationsAfterParsing, Array.isArray(fileError) ? fileError : [fileError]);\n                });\n              }));\n            case 25:\n              filesContent = _context3.sent;\n              setLoading(false);\n              if (!validationsAfterParsing.length) {\n                _context3.next = 34;\n                break;\n              }\n              setPlainFiles([]);\n              setFilesContent([]);\n              setFileErrors(function (errors) {\n                return [].concat(errors, validationsAfterParsing);\n              });\n              onFilesRejected == null ? void 0 : onFilesRejected({\n                errors: validationsAfterParsing\n              });\n              onFilesSelected == null ? void 0 : onFilesSelected({\n                errors: validationsBeforeParsing.concat(validationsAfterParsing)\n              });\n              return _context3.abrupt(\"return\");\n            case 34:\n              setFilesContent(filesContent);\n              setPlainFiles(plainFileObjects);\n              setFileErrors([]);\n              onFilesSuccessfullySelected == null ? void 0 : onFilesSuccessfullySelected({\n                filesContent: filesContent,\n                plainFiles: plainFileObjects\n              });\n              onFilesSelected == null ? void 0 : onFilesSelected({\n                plainFiles: plainFileObjects,\n                filesContent: filesContent\n              });\n            case 39:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }(), initializeWithCustomParameters);\n  }, [props, accept, clear, initializeWithCustomParameters, multiple, onFilesRejected, onFilesSelected, onFilesSuccessfullySelected, parseFile, readFilesContent, validators]);\n  return {\n    openFilePicker: openFilePicker,\n    filesContent: filesContent,\n    errors: fileErrors,\n    loading: loading,\n    plainFiles: plainFiles,\n    clear: clearWithEventListener\n  };\n}\n\n/**\n * A version of useFilePicker hook that keeps selected files between selections. On top of that it allows to remove files from the selection.\n */\nfunction useImperativeFilePicker(props) {\n  var _onFilesSelected = props.onFilesSelected,\n    _onFilesSuccessfullySelected = props.onFilesSuccessfullySelected,\n    validators = props.validators,\n    onFileRemoved = props.onFileRemoved;\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]),\n    allPlainFiles = _useState[0],\n    setAllPlainFiles = _useState[1];\n  var _useState2 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]),\n    allFilesContent = _useState2[0],\n    setAllFilesContent = _useState2[1];\n  var _useFilePicker = useFilePicker((0,_rollupPluginBabelHelpers_4e04b055_js__WEBPACK_IMPORTED_MODULE_0__.b)({}, props, {\n      onFilesSelected: function onFilesSelected(data) {\n        var _data$errors;\n        if (!_onFilesSelected) return;\n        if ((_data$errors = data.errors) != null && _data$errors.length) {\n          return _onFilesSelected(data);\n        }\n        // override the files property to return all files that were selected previously and in the current batch\n        _onFilesSelected({\n          errors: undefined,\n          plainFiles: [].concat(allPlainFiles, data.plainFiles || []),\n          filesContent: [].concat(allFilesContent, data.filesContent || [])\n        });\n      },\n      onFilesSuccessfullySelected: function onFilesSuccessfullySelected(data) {\n        setAllPlainFiles(function (previousPlainFiles) {\n          return previousPlainFiles.concat(data.plainFiles);\n        });\n        setAllFilesContent(function (previousFilesContent) {\n          return previousFilesContent.concat(data.filesContent);\n        });\n        if (!_onFilesSuccessfullySelected) return;\n        // override the files property to return all files that were selected previously and in the current batch\n        _onFilesSuccessfullySelected({\n          plainFiles: [].concat(allPlainFiles, data.plainFiles || []),\n          filesContent: [].concat(allFilesContent, data.filesContent || [])\n        });\n      }\n    })),\n    openFilePicker = _useFilePicker.openFilePicker,\n    loading = _useFilePicker.loading,\n    errors = _useFilePicker.errors,\n    clear = _useFilePicker.clear;\n  var clearAll = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function () {\n    clear();\n    // clear previous files\n    setAllPlainFiles([]);\n    setAllFilesContent([]);\n  }, [clear]);\n  var removeFileByIndex = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function (index) {\n    setAllFilesContent(function (previousFilesContent) {\n      return [].concat(previousFilesContent.slice(0, index), previousFilesContent.slice(index + 1));\n    });\n    setAllPlainFiles(function (previousPlainFiles) {\n      var removedFile = previousPlainFiles[index];\n      validators == null ? void 0 : validators.forEach(function (validator) {\n        return validator.onFileRemoved == null ? void 0 : validator.onFileRemoved(removedFile, index);\n      });\n      onFileRemoved == null ? void 0 : onFileRemoved(removedFile, index);\n      return [].concat(previousPlainFiles.slice(0, index), previousPlainFiles.slice(index + 1));\n    });\n  }, [validators, onFileRemoved]);\n  var removeFileByReference = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function (file) {\n    var index = allPlainFiles.findIndex(function (f) {\n      return f === file;\n    });\n    if (index === -1) return;\n    removeFileByIndex(index);\n  }, [removeFileByIndex, allPlainFiles]);\n  return {\n    openFilePicker: openFilePicker,\n    plainFiles: allPlainFiles,\n    filesContent: allFilesContent,\n    loading: loading,\n    errors: errors,\n    clear: clearAll,\n    removeFileByIndex: removeFileByIndex,\n    removeFileByReference: removeFileByReference\n  };\n}\n\n\n//# sourceMappingURL=index.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/use-file-picker/dist/index.esm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/use-file-picker/node_modules/file-selector/dist/es5/file-selector.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/use-file-picker/node_modules/file-selector/dist/es5/file-selector.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromEvent: () => (/* binding */ fromEvent)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _file__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./file */ \"(ssr)/./node_modules/use-file-picker/node_modules/file-selector/dist/es5/file.js\");\n\n\nvar FILES_TO_IGNORE = [\n    // Thumbnail cache files for macOS and Windows\n    '.DS_Store',\n    'Thumbs.db' // Windows\n];\n/**\n * Convert a DragEvent's DataTrasfer object to a list of File objects\n * NOTE: If some of the items are folders,\n * everything will be flattened and placed in the same list but the paths will be kept as a {path} property.\n * @param evt\n */\nfunction fromEvent(evt) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function () {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n            return [2 /*return*/, isDragEvt(evt) && evt.dataTransfer\n                    ? getDataTransferFiles(evt.dataTransfer, evt.type)\n                    : getInputFiles(evt)];\n        });\n    });\n}\nfunction isDragEvt(value) {\n    return !!value.dataTransfer;\n}\nfunction getInputFiles(evt) {\n    var files = isInput(evt.target)\n        ? evt.target.files\n            ? fromList(evt.target.files)\n            : []\n        : [];\n    return files.map(function (file) { return (0,_file__WEBPACK_IMPORTED_MODULE_0__.toFileWithPath)(file); });\n}\nfunction isInput(value) {\n    return value !== null;\n}\nfunction getDataTransferFiles(dt, type) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function () {\n        var items, files;\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!dt.items) return [3 /*break*/, 2];\n                    items = fromList(dt.items)\n                        .filter(function (item) { return item.kind === 'file'; });\n                    // According to https://html.spec.whatwg.org/multipage/dnd.html#dndevents,\n                    // only 'dragstart' and 'drop' has access to the data (source node)\n                    if (type !== 'drop') {\n                        return [2 /*return*/, items];\n                    }\n                    return [4 /*yield*/, Promise.all(items.map(toFilePromises))];\n                case 1:\n                    files = _a.sent();\n                    return [2 /*return*/, noIgnoredFiles(flatten(files))];\n                case 2: return [2 /*return*/, noIgnoredFiles(fromList(dt.files)\n                        .map(function (file) { return (0,_file__WEBPACK_IMPORTED_MODULE_0__.toFileWithPath)(file); }))];\n            }\n        });\n    });\n}\nfunction noIgnoredFiles(files) {\n    return files.filter(function (file) { return FILES_TO_IGNORE.indexOf(file.name) === -1; });\n}\n// IE11 does not support Array.from()\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from#Browser_compatibility\n// https://developer.mozilla.org/en-US/docs/Web/API/FileList\n// https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItemList\nfunction fromList(items) {\n    var files = [];\n    // tslint:disable: prefer-for-of\n    for (var i = 0; i < items.length; i++) {\n        var file = items[i];\n        files.push(file);\n    }\n    return files;\n}\n// https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem\nfunction toFilePromises(item) {\n    if (typeof item.webkitGetAsEntry !== 'function') {\n        return fromDataTransferItem(item);\n    }\n    var entry = item.webkitGetAsEntry();\n    // Safari supports dropping an image node from a different window and can be retrieved using\n    // the DataTransferItem.getAsFile() API\n    // NOTE: FileSystemEntry.file() throws if trying to get the file\n    if (entry && entry.isDirectory) {\n        return fromDirEntry(entry);\n    }\n    return fromDataTransferItem(item);\n}\nfunction flatten(items) {\n    return items.reduce(function (acc, files) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spread)(acc, (Array.isArray(files) ? flatten(files) : [files])); }, []);\n}\nfunction fromDataTransferItem(item) {\n    var file = item.getAsFile();\n    if (!file) {\n        return Promise.reject(item + \" is not a File\");\n    }\n    var fwp = (0,_file__WEBPACK_IMPORTED_MODULE_0__.toFileWithPath)(file);\n    return Promise.resolve(fwp);\n}\n// https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry\nfunction fromEntry(entry) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function () {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n            return [2 /*return*/, entry.isDirectory ? fromDirEntry(entry) : fromFileEntry(entry)];\n        });\n    });\n}\n// https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry\nfunction fromDirEntry(entry) {\n    var reader = entry.createReader();\n    return new Promise(function (resolve, reject) {\n        var entries = [];\n        function readEntries() {\n            var _this = this;\n            // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry/createReader\n            // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryReader/readEntries\n            reader.readEntries(function (batch) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(_this, void 0, void 0, function () {\n                var files, err_1, items;\n                return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (!!batch.length) return [3 /*break*/, 5];\n                            _a.label = 1;\n                        case 1:\n                            _a.trys.push([1, 3, , 4]);\n                            return [4 /*yield*/, Promise.all(entries)];\n                        case 2:\n                            files = _a.sent();\n                            resolve(files);\n                            return [3 /*break*/, 4];\n                        case 3:\n                            err_1 = _a.sent();\n                            reject(err_1);\n                            return [3 /*break*/, 4];\n                        case 4: return [3 /*break*/, 6];\n                        case 5:\n                            items = Promise.all(batch.map(fromEntry));\n                            entries.push(items);\n                            // Continue reading\n                            readEntries();\n                            _a.label = 6;\n                        case 6: return [2 /*return*/];\n                    }\n                });\n            }); }, function (err) {\n                reject(err);\n            });\n        }\n        readEntries();\n    });\n}\n// https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry\nfunction fromFileEntry(entry) {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function () {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n                    entry.file(function (file) {\n                        var fwp = (0,_file__WEBPACK_IMPORTED_MODULE_0__.toFileWithPath)(file, entry.fullPath);\n                        resolve(fwp);\n                    }, function (err) {\n                        reject(err);\n                    });\n                })];\n        });\n    });\n}\n//# sourceMappingURL=file-selector.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/use-file-picker/node_modules/file-selector/dist/es5/file-selector.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/use-file-picker/node_modules/file-selector/dist/es5/file.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/use-file-picker/node_modules/file-selector/dist/es5/file.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   COMMON_MIME_TYPES: () => (/* binding */ COMMON_MIME_TYPES),\n/* harmony export */   toFileWithPath: () => (/* binding */ toFileWithPath)\n/* harmony export */ });\nvar COMMON_MIME_TYPES = new Map([\n    ['avi', 'video/avi'],\n    ['gif', 'image/gif'],\n    ['ico', 'image/x-icon'],\n    ['jpeg', 'image/jpeg'],\n    ['jpg', 'image/jpeg'],\n    ['mkv', 'video/x-matroska'],\n    ['mov', 'video/quicktime'],\n    ['mp4', 'video/mp4'],\n    ['pdf', 'application/pdf'],\n    ['png', 'image/png'],\n    ['zip', 'application/zip'],\n    ['doc', 'application/msword'],\n    ['docx', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document']\n]);\nfunction toFileWithPath(file, path) {\n    var f = withMimeType(file);\n    if (typeof f.path !== 'string') { // on electron, path is already set to the absolute path\n        var webkitRelativePath = file.webkitRelativePath;\n        Object.defineProperty(f, 'path', {\n            value: typeof path === 'string'\n                ? path\n                // If <input webkitdirectory> is set,\n                // the File will have a {webkitRelativePath} property\n                // https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/webkitdirectory\n                : typeof webkitRelativePath === 'string' && webkitRelativePath.length > 0\n                    ? webkitRelativePath\n                    : file.name,\n            writable: false,\n            configurable: false,\n            enumerable: true\n        });\n    }\n    return f;\n}\nfunction withMimeType(file) {\n    var name = file.name;\n    var hasExtension = name && name.lastIndexOf('.') !== -1;\n    if (hasExtension && !file.type) {\n        var ext = name.split('.')\n            .pop().toLowerCase();\n        var type = COMMON_MIME_TYPES.get(ext);\n        if (type) {\n            Object.defineProperty(file, 'type', {\n                value: type,\n                writable: false,\n                configurable: false,\n                enumerable: true\n            });\n        }\n    }\n    return file;\n}\n//# sourceMappingURL=file.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdXNlLWZpbGUtcGlja2VyL25vZGVfbW9kdWxlcy9maWxlLXNlbGVjdG9yL2Rpc3QvZXM1L2ZpbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsb0JBQW9CO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbWFnZS1haS8uL25vZGVfbW9kdWxlcy91c2UtZmlsZS1waWNrZXIvbm9kZV9tb2R1bGVzL2ZpbGUtc2VsZWN0b3IvZGlzdC9lczUvZmlsZS5qcz9iYTY5Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgQ09NTU9OX01JTUVfVFlQRVMgPSBuZXcgTWFwKFtcbiAgICBbJ2F2aScsICd2aWRlby9hdmknXSxcbiAgICBbJ2dpZicsICdpbWFnZS9naWYnXSxcbiAgICBbJ2ljbycsICdpbWFnZS94LWljb24nXSxcbiAgICBbJ2pwZWcnLCAnaW1hZ2UvanBlZyddLFxuICAgIFsnanBnJywgJ2ltYWdlL2pwZWcnXSxcbiAgICBbJ21rdicsICd2aWRlby94LW1hdHJvc2thJ10sXG4gICAgWydtb3YnLCAndmlkZW8vcXVpY2t0aW1lJ10sXG4gICAgWydtcDQnLCAndmlkZW8vbXA0J10sXG4gICAgWydwZGYnLCAnYXBwbGljYXRpb24vcGRmJ10sXG4gICAgWydwbmcnLCAnaW1hZ2UvcG5nJ10sXG4gICAgWyd6aXAnLCAnYXBwbGljYXRpb24vemlwJ10sXG4gICAgWydkb2MnLCAnYXBwbGljYXRpb24vbXN3b3JkJ10sXG4gICAgWydkb2N4JywgJ2FwcGxpY2F0aW9uL3ZuZC5vcGVueG1sZm9ybWF0cy1vZmZpY2Vkb2N1bWVudC53b3JkcHJvY2Vzc2luZ21sLmRvY3VtZW50J11cbl0pO1xuZXhwb3J0IGZ1bmN0aW9uIHRvRmlsZVdpdGhQYXRoKGZpbGUsIHBhdGgpIHtcbiAgICB2YXIgZiA9IHdpdGhNaW1lVHlwZShmaWxlKTtcbiAgICBpZiAodHlwZW9mIGYucGF0aCAhPT0gJ3N0cmluZycpIHsgLy8gb24gZWxlY3Ryb24sIHBhdGggaXMgYWxyZWFkeSBzZXQgdG8gdGhlIGFic29sdXRlIHBhdGhcbiAgICAgICAgdmFyIHdlYmtpdFJlbGF0aXZlUGF0aCA9IGZpbGUud2Via2l0UmVsYXRpdmVQYXRoO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZiwgJ3BhdGgnLCB7XG4gICAgICAgICAgICB2YWx1ZTogdHlwZW9mIHBhdGggPT09ICdzdHJpbmcnXG4gICAgICAgICAgICAgICAgPyBwYXRoXG4gICAgICAgICAgICAgICAgLy8gSWYgPGlucHV0IHdlYmtpdGRpcmVjdG9yeT4gaXMgc2V0LFxuICAgICAgICAgICAgICAgIC8vIHRoZSBGaWxlIHdpbGwgaGF2ZSBhIHt3ZWJraXRSZWxhdGl2ZVBhdGh9IHByb3BlcnR5XG4gICAgICAgICAgICAgICAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0hUTUxJbnB1dEVsZW1lbnQvd2Via2l0ZGlyZWN0b3J5XG4gICAgICAgICAgICAgICAgOiB0eXBlb2Ygd2Via2l0UmVsYXRpdmVQYXRoID09PSAnc3RyaW5nJyAmJiB3ZWJraXRSZWxhdGl2ZVBhdGgubGVuZ3RoID4gMFxuICAgICAgICAgICAgICAgICAgICA/IHdlYmtpdFJlbGF0aXZlUGF0aFxuICAgICAgICAgICAgICAgICAgICA6IGZpbGUubmFtZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gZjtcbn1cbmZ1bmN0aW9uIHdpdGhNaW1lVHlwZShmaWxlKSB7XG4gICAgdmFyIG5hbWUgPSBmaWxlLm5hbWU7XG4gICAgdmFyIGhhc0V4dGVuc2lvbiA9IG5hbWUgJiYgbmFtZS5sYXN0SW5kZXhPZignLicpICE9PSAtMTtcbiAgICBpZiAoaGFzRXh0ZW5zaW9uICYmICFmaWxlLnR5cGUpIHtcbiAgICAgICAgdmFyIGV4dCA9IG5hbWUuc3BsaXQoJy4nKVxuICAgICAgICAgICAgLnBvcCgpLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIHZhciB0eXBlID0gQ09NTU9OX01JTUVfVFlQRVMuZ2V0KGV4dCk7XG4gICAgICAgIGlmICh0eXBlKSB7XG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZmlsZSwgJ3R5cGUnLCB7XG4gICAgICAgICAgICAgICAgdmFsdWU6IHR5cGUsXG4gICAgICAgICAgICAgICAgd3JpdGFibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZpbGU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1maWxlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/use-file-picker/node_modules/file-selector/dist/es5/file.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/use-file-picker/node_modules/file-selector/dist/es5/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/use-file-picker/node_modules/file-selector/dist/es5/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromEvent: () => (/* reexport safe */ _file_selector__WEBPACK_IMPORTED_MODULE_0__.fromEvent)\n/* harmony export */ });\n/* harmony import */ var _file_selector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./file-selector */ \"(ssr)/./node_modules/use-file-picker/node_modules/file-selector/dist/es5/file-selector.js\");\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdXNlLWZpbGUtcGlja2VyL25vZGVfbW9kdWxlcy9maWxlLXNlbGVjdG9yL2Rpc3QvZXM1L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTRDO0FBQzVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1hZ2UtYWkvLi9ub2RlX21vZHVsZXMvdXNlLWZpbGUtcGlja2VyL25vZGVfbW9kdWxlcy9maWxlLXNlbGVjdG9yL2Rpc3QvZXM1L2luZGV4LmpzP2M3ZTYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgZnJvbUV2ZW50IH0gZnJvbSAnLi9maWxlLXNlbGVjdG9yJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/use-file-picker/node_modules/file-selector/dist/es5/index.js\n");

/***/ })

};
;